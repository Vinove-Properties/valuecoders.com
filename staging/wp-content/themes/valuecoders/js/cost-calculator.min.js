document.addEventListener("DOMContentLoaded",function (){
populateForm(calcObj.json_data);    
});	

function populateForm(formData){
const formContainer = document.getElementById("calculatorForm");
let stepIndex = 1;

Object.keys(formData).forEach((key) => {
    const stepData = formData[key];
    const stepDiv = document.createElement("div");
    stepDiv.classList.add("step", stepData["dom-class"]);
    if (stepIndex === 1) stepDiv.classList.add("active");
    stepDiv.id = `step${stepIndex}`;

    stepData.questions.forEach((question, qIndex) => {
        const questionContainer = document.createElement("div");
        questionContainer.classList.add("question-container");
        questionContainer.setAttribute("data-required", question.isRequired);

        const questionTitle = document.createElement("h4");
        questionTitle.classList.add("question-name");
        questionTitle.textContent = question.title;
        questionContainer.appendChild(questionTitle);

        const optionsContainer = document.createElement("div");
        optionsContainer.classList.add("dom-class-column");

        question.options.forEach(option => {
            const label = document.createElement("label");
            const inputName = `${key}_question${qIndex}`;
            if (option.include === "textarea" && (!option.type || !option.name)) {
                label.innerHTML = `
                <div class="textarea-row">
                    <textarea class="input-textarea" name="${inputName}_other" placeholder="Please specify..."></textarea>
                </div>
                `;
            } else if (option.type === "checkbox" && option.include === "textarea") {
                label.innerHTML = `
                <div class="checkbox-textarea-row">
                    <input type="checkbox" name="${inputName}" value="Other" id="${inputName}_other_checkbox"> 
                    <textarea class="input-textarea" name="${inputName}_other" placeholder="${option.name} (Please specify)"
                    onfocus="document.getElementById('${inputName}_other_checkbox').checked = true"></textarea>
                </div>`;
            } else if (option.type === "radio" && option.include === "textarea") {
                const isNameEmpty = option.name.trim() === "";
                const placeholder = isNameEmpty
                    ? "Please specify"
                    : `${option.name} (Please specify)`;
                label.innerHTML = `
                    <div class="radio-textarea-row">
                        <input 
                            type="radio" 
                            name="${inputName}" 
                            value="Other" 
                            id="${inputName}_other_radio"
                        >
                        <textarea 
                            class="input-textarea" 
                            name="${inputName}_other" 
                            id="${inputName}_other_textarea" 
                            placeholder="${placeholder}" 
                            onfocus="document.getElementById('${inputName}_other_radio').checked = true"
                        ></textarea>
                    </div>
                `;
            } else if (option.type === "checkbox") {
                label.innerHTML = `
                <div class="textarea-row">
                    <input type="checkbox" name="${inputName}" value="${option.name}">${option.name}
                </div>
                `;
            } else if (option.type === "inputtext") {
                label.innerHTML = `
                <div class="input-text-row">
                    <input type="text" name="${inputName}_input" placeholder="Enter your response...">
                    </div>
                `;
            } else {
                label.innerHTML = `
                 <div class="radio-row">
                    <input type="radio" name="${inputName}" value="${option.name}">${option.name}
                    </div>
                `;
            }
            optionsContainer.appendChild(label);
        });

        questionContainer.appendChild(optionsContainer);
        const errorMsg = document.createElement("span");
        errorMsg.classList.add("error-msg");
        errorMsg.textContent = "Please fill in the required fields.";
        questionContainer.appendChild(errorMsg);

        stepDiv.appendChild(questionContainer);
    });

    formContainer.appendChild(stepDiv);
    stepIndex++;
});
const lastStep = document.querySelector(".last-step");
lastStep.id = `step${stepIndex}`;
lastStep.classList.add("step");
if (stepIndex === 1) lastStep.classList.add("active");
formContainer.appendChild(lastStep);
updateNavigation();
}
let currentStep = 1;
function updateNavigation() {
    const stepsNav = document.getElementById('stepsNav');
    stepsNav.innerHTML = '';
    const steps = document.querySelectorAll('.step');

    steps.forEach((_, index) => {
        const stepNav = document.createElement('div');
        stepNav.innerText = `${index + 1}`;
        stepNav.classList.toggle('active', index + 1 === currentStep);

        if (index + 1 < currentStep) {
            stepNav.classList.add('clickable');
            stepNav.addEventListener("click", () => goToStep(index + 1));
        }

        stepsNav.appendChild(stepNav);
    });

    document.getElementById('prevBtn').classList.toggle('hidden', currentStep === 1);
    document.getElementById('nextBtn').classList.toggle('hidden', currentStep === steps.length);
    document.getElementById('submitBtn').classList.toggle('hidden', currentStep !== steps.length);
}
function goToStep(step) {
    const steps = document.querySelectorAll('.step');
    steps[currentStep - 1].classList.remove('active');
    currentStep = step;
    steps[currentStep - 1].classList.add('active');
    updateNavigation();
}

const dmFrmFields = [
    { selector: '#cl-name', rules: { required: true } },
    { selector: '#cl-email', rules: { required: true, email: true } },
    { selector: '#cl-phone', rules: { required: false, phone: true } },
    { selector: '#cl-company', rules: { required: true } }
];
function validateField(input, rules){
  const value = input.value.trim();
  const container = input.closest('.user-input');
  const errorEl = container?.querySelector('.error-message');

  let error = '';
  const emailCheck = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  if (rules.required && value === '') {
    error = input.getAttribute("data-err") || 'This field is required';
  } else if (rules.email && value && !emailCheck.test(value) ){
    error = 'Enter a valid email';
  } else if (rules.phone && value && !/^[0-9+\-\s()]+$/.test(value)) {
    error = 'Enter a valid phone number';
  }

  if (error) {
    container?.classList.add('verror');
    if (errorEl) errorEl.textContent = error;
    return false;
  } else {
    container?.classList.remove('verror');
    if (errorEl) errorEl.textContent = '';
    return true;
  }
}

function validateFields(fields){
  let isValid = true;
  fields.forEach(({ selector, rules }) => {
    const input = document.querySelector(selector);
    if (!input) return;
    if (!validateField(input, rules)) isValid = false;
  });
  return isValid;
}

function validateFieldOnEvent(selector, rules) {
  const input = document.querySelector(selector);
  if (!input) return;

  // Validate as user types
  input.addEventListener('input', () => {
    validateField(input, rules);
  });

  // Optional: also validate on blur (in case user pastes or skips)
  input.addEventListener('blur', () => {
    validateField(input, rules);
  });
}

function setupRealTimeValidation() {
  dmFrmFields.forEach(({ selector, rules }) => {
    validateFieldOnEvent(selector, rules);
  });
}
document.addEventListener('DOMContentLoaded', setupRealTimeValidation);

function validateStep(step){
    const stepElement = document.getElementById(`step${step}`);
    const questions = stepElement.querySelectorAll('.question-container');
    let isValid = true;

    questions.forEach((question) => {
        const isRequired = question.getAttribute('data-required') === "yes";
        const inputs = question.querySelectorAll('input, textarea');
        let questionValid = !isRequired;
        inputs.forEach(input => {
            //console.log( input );
            if ((input.type === "radio" || input.type === "checkbox") && input.checked) {
                questionValid = true;
            } else if ((input.type === "text" || input.tagName.toLowerCase() === "textarea") && input.value.trim()) {
                questionValid = true;
            }

            input.addEventListener("input", () => {
                question.querySelector(".error-msg").style.display = "none";
            });

            if (input.type === "radio" || input.type === "checkbox") {
                input.addEventListener("change", () => {
                    question.querySelector(".error-msg").style.display = "none";
                });
            }
            
            if( ["checkbox", "radio"].includes(input.type) && input.checked && (input.value.trim() === "Other") ){
                let nxtElm = input.nextElementSibling;
                if( nxtElm && (nxtElm.value.trim() == "") ){
                    question.querySelector(".error-msg").style.display = "block";
                    isValid = false;
                }                 
            }
        });

        if (isRequired && !questionValid) {
            question.querySelector(".error-msg").style.display = "block";
            isValid = false;
        }
    });

    if (stepElement.classList.contains("last-step")){        
        isValid = validateFields( dmFrmFields );
    }
    return isValid;
}

const calcElm = document.getElementById('calculatorForm');
calcElm.addEventListener('change', function (e) {
  const input = e.target;
  if (input.matches('input[type="checkbox"], input[type="radio"]')) {
    const parent = input.closest('label');
    if (input.type === "radio") {
      calcElm.querySelectorAll(`input[name="${input.name}"]`).forEach(radio => {
        radio.closest('label')?.classList.remove('active');
      });
    }

    if (input.checked) {
      parent?.classList.add('active');
    } else {
      parent?.classList.remove('active');
    }
  }
});

function changeStep(direction){
    //console.log(currentStep);
    if (direction === 1 && !validateStep(currentStep)) {
        return;
    }
    document.getElementById("sub-outpur").innerHTML = "";
    document.querySelectorAll('.step')[currentStep - 1].classList.remove('active');
    currentStep += direction;
    document.querySelectorAll('.step')[currentStep - 1].classList.add('active');

    updateNavigation();
}

document.getElementById("submitBtn").addEventListener("click", function (event){
    if( !validateStep(currentStep) ){   
        event.preventDefault();
    }else{
        var formEl          = document.getElementById("cost-calc-form");
        var elmThanks       = document.getElementById("elm-thanku");

        var formData        = new FormData(formEl);
        const formDataObj   = {};
        for( let [key, value] of formData.entries() ){
            if( formDataObj[key] ){
                if( Array.isArray(formDataObj[key]) ){
                    formDataObj[key].push(value);
                }else{
                    formDataObj[key] = [formDataObj[key], value];
                }
            }else{
                formDataObj[key] = value;
            }
        }
        fetch(`${calcObj.admin_ajax}?action=handlecosting`, {
            method: 'POST',
            headers: {'Content-Type':'application/json'},
            body: JSON.stringify(formDataObj)
        })
        .then(response => response.json())
        .then(data => {
            formEl.style.display    = "none";
            elmThanks.style.display = "block";            
            //document.getElementById("sub-outpur").innerHTML = data.markup;
        })
        .catch(error => {
            console.error('Error:', error);
        });        
        event.preventDefault();
    }
});