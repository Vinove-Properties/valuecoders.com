<?php
/*
Template Name: Contact Page Template
*/ 
global $post;
$thisPostID = $post->ID;
get_header();
?>
<section class="contact-us-section full-width-form padding-t-150 padding-b-150">


	<div class="container">
		<div class="bg-voilet">
			<div class="form-box-outer right-box">
				<div class="head-txt text-center">
				<?php 
				while( have_posts() ) : the_post();
					the_content();
				endwhile;
				?>			
				</div>
				<form action="<?php bloginfo('url'); ?>/sendmail1.php" enctype="multipart/form-data" method="POST" id="contact-form-section">
					<div class="form-inner dis-flex">
						<div class="form-text-cont">
							<label for="focusInput">Full Name*</label>
							<div class="user-input">
								<input type="text" id="cont_name" placeholder="Enter your full name" class="input-field" value="" name="user-name" required />
								<small>Error Message</small>
							</div>
						</div>
						<div class="form-text-cont">
							<label>Email Address*</label>
							<div class="user-input">
								<input type="text" pattern="^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,10}$" placeholder="Enter your email address" class="input-field" value="" name="user-email" id="cont_email" />
								<small>Error Message</small>
							</div>
						</div>
						<div class="form-text-cont">
							<label>Phone no*</label>
							<div class="user-input">
								<input type="text" class="input-field" placeholder="Enter your full name" value="" id="cont_phpne" name="user-phone" required />
								<small>Error Message</small>
							</div>
						</div>
						<div class="form-text-cont">
							<label>Country*</label>
							<div class="user-input">
								<input class="input-field input-skype" id="cont_country" type="text" placeholder="Enter your country" value="" name="user-country" />
								<small>Error Message</small>
							</div>
						</div>
						<div class="form-text-cont width-full">
							<label>Requirement*</label>
							<div class="user-input">
								<textarea class="input-field comment-input" placeholder="Enter your requirement" name="user-req"></textarea>
								<div class="drop-input attachment_brw" id="uploadcontact" >
									<div id="dropcontact">
										<a href="#" class="drop-box clr-white">BROWSE | DROP FILES HERE</a>
										<input type="file" name="upl"  style="display:none;" />
									</div>
								</div>
							</div>
						</div>
					</div>
					<p class="note">Note : We Respect Your Privacy! Your details will never be shared with anyone for marketing purposes.</p>
					<div class="user-input checkout">
						<input type="submit" id="submitButton" class="checkout-submit" value="Send your request" />
					</div>
				</form>
			</div>

			<div class="trusted-logos">
				<div class="dis-flex items-center justify-sb">
					<span class="text-box">Trusted By</span>
					<div class="logo-box">
						<picture>
							<source type="image/webp" srcset="<?php bloginfo('template_url'); ?>/images/trusted-logos.webp">
							<source type="image/png" srcset="<?php bloginfo('template_url'); ?>/images/trusted-logos.png">
							<img loading="lazy" src="<?php bloginfo('template_url'); ?>/images/trusted-logos.png" 
							alt="Valuecoders" width="786" height="104"> 
						</picture>

					</div>
				</div>
			</div>

		</div>
		<script type="text/javascript">
	
function autocomplete(inp, arr) {
	  /*the autocomplete function takes two arguments,
	  the text field element and an array of possible autocompleted values:*/
	  var currentFocus;
	  /*execute a function when someone writes in the text field:*/
	  inp.addEventListener("input", function(e) {
	      var a, b, i, val = this.value;
	      /*close any already open lists of autocompleted values*/
	      closeAllLists();
	      if (!val) { return false;}
	      currentFocus = -1;
	      /*create a DIV element that will contain the items (values):*/
	      a = document.createElement("DIV");
	      a.setAttribute("id", this.id + "autocomplete-list");
	      a.setAttribute("class", "autocomplete-items");
	      /*append the DIV element as a child of the autocomplete container:*/
	      this.parentNode.appendChild(a);
	      /*for each item in the array...*/
	      for (i = 0; i < arr.length; i++) {
	        /*check if the item starts with the same letters as the text field value:*/
	        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
	          /*create a DIV element for each matching element:*/
	          b = document.createElement("DIV");
	          /*make the matching letters bold:*/
	          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
	          b.innerHTML += arr[i].substr(val.length);
	          /*insert a input field that will hold the current array item's value:*/
	          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
	          /*execute a function when someone clicks on the item value (DIV element):*/
	          b.addEventListener("click", function(e) {
	              /*insert the value for the autocomplete text field:*/
	              inp.value = this.getElementsByTagName("input")[0].value;
	              /*close the list of autocompleted values,
	              (or any other open lists of autocompleted values:*/
	              closeAllLists();
	          });
	          a.appendChild(b);
	        }
	      }
	  });
	  /*execute a function presses a key on the keyboard:*/
	  inp.addEventListener("keydown", function(e) {
	      var x = document.getElementById(this.id + "autocomplete-list");
	      if (x) x = x.getElementsByTagName("div");
	      if (e.keyCode == 40) {
	        /*If the arrow DOWN key is pressed,
	        increase the currentFocus variable:*/
	        currentFocus++;
	        /*and and make the current item more visible:*/
	        addActive(x);
	      } else if (e.keyCode == 38) { //up
	        /*If the arrow UP key is pressed,
	        decrease the currentFocus variable:*/
	        currentFocus--;
	        /*and and make the current item more visible:*/
	        addActive(x);
	      } else if (e.keyCode == 13) {
	        /*If the ENTER key is pressed, prevent the form from being submitted,*/
	        e.preventDefault();
	        if (currentFocus > -1) {
	          /*and simulate a click on the "active" item:*/
	          if (x) x[currentFocus].click();
	        }
	      }
	  });
	  function addActive(x) {
	    /*a function to classify an item as "active":*/
	    if (!x) return false;
	    /*start by removing the "active" class on all items:*/
	    removeActive(x);
	    if (currentFocus >= x.length) currentFocus = 0;
	    if (currentFocus < 0) currentFocus = (x.length - 1);
	    /*add class "autocomplete-active":*/
	    x[currentFocus].classList.add("autocomplete-active");
	  }
	  function removeActive(x) {
	    /*a function to remove the "active" class from all autocomplete items:*/
	    for (var i = 0; i < x.length; i++) {
	      x[i].classList.remove("autocomplete-active");
	    }
	  }
	  function closeAllLists(elmnt) {
	    /*close all autocomplete lists in the document,
	    except the one passed as an argument:*/
	    var x = document.getElementsByClassName("autocomplete-items");
	    for (var i = 0; i < x.length; i++) {
	      if (elmnt != x[i] && elmnt != inp) {
	        x[i].parentNode.removeChild(x[i]);
	      }
	    }
	  }
	  /*execute a function when someone clicks in the document:*/
	  document.addEventListener("click", function (e) {
	      closeAllLists(e.target);
	      });
}

/*An array containing all the country names in the world:*/
var countries = ["Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antigua & Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia & Herzegovina","Botswana","Brazil","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central Arfrican Republic","Chad","Chile","China","Colombia","Congo","Cook Islands","Costa Rica","Cote D Ivoire","Croatia","Cuba","Curacao","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Polynesia","French West Indies","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guam","Guatemala","Guernsey","Guinea","Guinea Bissau","Guyana","Haiti","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauro","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","North Korea","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Pierre & Miquelon","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Korea","South Sudan","Spain","Sri Lanka","St Kitts & Nevis","St Lucia","St Vincent","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Timor L'Este","Togo","Tonga","Trinidad & Tobago","Tunisia","Turkey","Turkmenistan","Turks & Caicos","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Virgin Islands (US)","Yemen","Zambia","Zimbabwe"];

/*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
autocomplete(document.getElementById("cont_country"), countries);

// const uploadFile = (files) => {
//   console.log("Uploading file...");
//   const API_ENDPOINT = "https://file.io";
//   const request = new XMLHttpRequest();
//   const formData = new FormData();

//   request.open("POST", API_ENDPOINT, true);
//   request.onreadystatechange = () => {
//     if (request.readyState === 4 && request.status === 200) {
//       console.log(request.responseText);
//     }
//   };
  
//   for (let i = 0; i < files.length; i++) {
//     formData.append(files[i].name, files[i])
//   }
//   request.send(formData);
// };
// fileInput.addEventListener("change", event => {
//   const files = event.target.files;
//   uploadFile(files);
// });
// var clickMe = document.querySelector('.fileUploadBtn');

// clickMe.addEventListener('click', function (event) {
// 	el = document.getElementById('fileInput');
// 	if (el.onclick) {
// 	   el.onclick();
// 	} else if (el.click) {
// 	   el.click();
// 	}
// });

</script>
		<script type="text/javascript">
	const form = document.getElementById('contact-form-section');
	const username = document.getElementById('cont_name');
	const email = document.getElementById('cont_email');
	const phone = document.getElementById('cont_phpne');
	const countriesData = document.getElementById('cont_country');

//Show input error messages
function showError(input, message) {
    const formControl = input.parentElement;
    formControl.className = 'user-input form-control verror';
    const small = formControl.querySelector('small');
    small.innerText = message;
}

//show success colour
function showSucces(input) {
    const formControl = input.parentElement;
     const small = formControl.querySelector('small');
    formControl.className = 'user-input form-control success';
   small.innerText = 'success';
}

//check email is valid
function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
        showSucces(input)
    }else {
        showError(input,'Email is not invalid');
    }
}

function phonenumber(inputtxt)
{
  var phoneno = /^(?:(?:\+|0{0,2})91(\s*[\-]\s*)?|[0]?)?[789]\d{9}$/;
  if(phoneno.test(inputtxt.value.trim())) {
        showSucces(inputtxt,)
    }else {
        showError(inputtxt,'Phone Number is not invalid');
    }
}

username.addEventListener("keyup", checkUseName);
username.addEventListener("keypress", checkUseName);
username.addEventListener("keydown", checkUseName);

countriesData.addEventListener("keyup", checkCont);
countriesData.addEventListener("keypress", checkCont);
countriesData.addEventListener("keydown", checkCont);
countriesData.addEventListener("focusout", checkCont);

phone.addEventListener("keyup", checkPhone);
phone.addEventListener("keypress", checkPhone);
phone.addEventListener("keydown", checkPhone);

email.addEventListener("keyup", checkEmailEvent);
email.addEventListener("keypress", checkEmailEvent);
email.addEventListener("keydown", checkEmailEvent);


function checkEmailEvent(event){
	checkEmail(email);
}
function checkUseName(event){
  checkLength(username,3,15);
}

function checkCont(event){
  checkLength(countriesData,1,255);
}

function checkPhone(event){
  checkLength(phone,10,10);
  phonenumber(phone);
}



//checkRequired fields
function checkRequired(inputArr) {
    inputArr.forEach(function(input){
        if(input.value.trim() === ''){
            // showError(input,`${getFieldName(input)} is required`)
            showError(input,`This Field is required`)
        }else {
        	checkLength(username,3,15);	
		    checkEmail(email);
		    checkLength(countriesData,3,255);
            showSucces(input);
        }
    });
}


//check input Length
function checkLength(input, min ,max) {
	console.log(input.value);
    if(input.value.length < min) {
        // showError(input, `${getFieldName(input)} must be at least ${min} characters`);
        showError(input, `Value must be at least ${min} characters`);
    // }else if(input.value.length > max) {
    //     showError(input, `Name must be less than ${max} characters`);
    }else {
        showSucces(input);
    }
}

//get FieldName
function getFieldName(input) {
    return input.id.charAt(0).toUpperCase() + input.id.slice(1);
}
//Event Listeners
var clickMe = document.querySelector('#submitButton');
// This will run when the .click-me element is clicked
clickMe.addEventListener('click', function (event) {
	console.log("KAA");
	checkRequired([username, email,phone,countriesData]);
	if(email.value!='' && username.value!='' && phone.value!='' && countriesData.value!=''){
	var form = document.getElementById("contact-form-section");
	form.submit(); 
	}
});
</script>

<style>
	.cont_country_section{
		position: relative;
	}
.autocomplete-items {
    
    z-index: 99;
    
    overflow: auto;
    min-height: 50px;
    height: 150px;
    /*background: #181732;*/
}
.autocomplete-items div {
    padding: 10px;
    cursor: pointer;
    background-color: #fff;
    color: #000;
    border-bottom: 1px solid #d4d4d4;
}
.err{
    border:1px solid red !important;
    color:red;
}
.onfcs{
    border:0px solid red !important;
    color:black;
}
#drop-area {
  border: 2px dashed #ccc;
  /*border-radius: 20px;*/
  width: 60%;
  /*margin: 50px auto;*/
  padding: 20px;
}
#drop-area.highlight {
  /*border-color: purple;*/
}
.form-control.success input {
    border-color: #2ecc71;
}

.form-control.success small{
	visibility: hidden;
}

.form-control.verror input {
    border-color: #e74c3c;    
}

.form-control small , .user-input small {
    color: #e74c3c;
    visibility: hidden;
}
.user-input.form-control.verror:focus-visible{
	border-color: #e74c3c !important;  
}
.form-control.verror small{
    visibility: visible;
}
.user-input.form-control.success input {
    color: #60b741!important;
}
.user-input.form-control.verror input {
   color: red!important;
}
</style>
		<div class="form-footer dis-flex">
			<?php dynamic_sidebar('vc-contacts'); ?>
		</div>
	</div>
</section>
<?php get_footer(); ?>